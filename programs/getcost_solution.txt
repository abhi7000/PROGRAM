import heapq
num_nodes,num_edges=[int(i) for i in input().split()]

graph={}
for i in range(1,num_nodes+1):
    graph[i]=[]

for _ in range(num_edges):
    a,b,w=[int(i) for i in input().split()]
    graph[a].append((w,b))
    graph[b].append((w,a))
    
queue=[]
visited=set()
queue.append((0,1))

no_path=True

while queue:
    curr=heapq.heappop(queue)
    visited.add(curr[1])
    if curr[1]==num_nodes:
        print(curr[0])
        no_path=False
        break
    for i in graph[curr[1]]:
        if i[1] not in visited:
            tmp=(max(curr[0],i[0]),i[1])
            heapq.heappush(queue,tmp)
    
if no_path:
    print("NO PATH EXISTS")
